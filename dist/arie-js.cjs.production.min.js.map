{"version":3,"file":"arie-js.cjs.production.min.js","sources":["../src/arie/use-arie.ts","../src/arie/styles.ts","../src/arie/use-cursor.tsx","../src/arie/use-scroll.tsx","../src/arie/use-layout-effect.ts"],"sourcesContent":["import * as React from 'react'\nimport type {Cursor, EventType} from '../types'\n\n/**\n *\n * @description\n * Renders a string of numbers displaying\n * CURSOR and SCROLL information/data.\n *\n * @author = Chandler Chappell <@chvndler>\n * @license = This package is provided \"as is,\" without warranty of any kind, expressed or implied.\n * In no event shall the author be held liable for any damages arising in any way from the use of this package.\n *\n * https://github.com/chvndler\n * Copyright © 2022. CDC® All rights reserved.\n *\n * LICENSE MIT 2022\n *\n * Have fun.\n *\n **/\n\n/**\n * ----------------------------------------------------------------------------------*\n * ------------------------------ initArie_CURSOR ----------------------------------------------*\n * ------------------------------------------------------------------------*\n **/\n\nconst initArie: Cursor = {\n  position: {\n    client: {x: null, y: null},\n    screen: {x: null, y: null},\n    page: {x: null, y: null}\n  },\n  scroll: {\n    wheelDown: null,\n    wheelUp: null\n  },\n  eventType: null,\n  selectedElement: {\n    position: {\n      x: null,\n      y: null,\n      angle: null\n    },\n    boundingRect: {\n      left: null,\n      top: null,\n      width: null,\n      height: null\n    },\n    isHover: false\n  }\n}\n\nconst useArieCursor = (\n  touchEnabled: boolean = true,\n  selectedElementId: string | null = null,\n  selectedElementOffset: {x: number; y: number} = {x: 0, y: 0}\n): Cursor => {\n  const [cursor, setCursor] = React.useState<Cursor>(initArie)\n  let selectedEl: HTMLElement | null = null\n\n  const onCursorTouchEvent = (event: Event): void => {\n    let clientX: number\n    let clientY: number\n    let screenX: number\n    let screenY: number\n    let pageX: number\n    let pageY: number\n    const scroll = {...cursor.scroll}\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n      case 'mousedown':\n      case 'mouseup':\n      case 'wheel':\n        const cursorEvent = event as MouseEvent\n\n        clientX = cursorEvent.clientX\n        clientY = cursorEvent.clientY\n        screenX = cursorEvent.screenX\n        screenY = cursorEvent.screenY\n        pageX = cursorEvent.pageX\n        pageY = cursorEvent.pageY\n        scroll.wheelDown = (event as WheelEvent).deltaY > 0\n        scroll.wheelUp = (event as WheelEvent).deltaY < 0\n\n        break\n      case 'touchmove':\n      case 'touchstart':\n        const {touches} = event as TouchEvent\n        const touchEvent = touches[0]\n\n        clientX = touchEvent.clientX\n        clientY = touchEvent.clientY\n        screenX = touchEvent.screenX\n        screenY = touchEvent.screenY\n        pageX = touchEvent.pageX\n        pageY = touchEvent.pageY\n\n        break\n      default:\n        throw new Error(`Unknown event triggered \"${event.type}\"`)\n    }\n\n    const selectedElPosition = {...cursor.selectedElement.position}\n    const selectedElBoundingRect = {...cursor.selectedElement.boundingRect}\n    if (selectedEl) {\n      const {left, top, width, height} = selectedEl.getBoundingClientRect()\n      selectedElPosition.x = clientX - left - selectedElementOffset.x\n      selectedElPosition.y = clientY - top - selectedElementOffset.y\n      const rad2Deg = 180 / Math.PI\n      const angleOffset = 180\n      selectedElPosition.angle = Math.atan2(selectedElPosition.y, -selectedElPosition.x) * rad2Deg + angleOffset\n      selectedElBoundingRect.left = left\n      selectedElBoundingRect.top = top\n      selectedElBoundingRect.width = width\n      selectedElBoundingRect.height = height\n    }\n\n    setCursor((prevState) => ({\n      ...prevState,\n      position: {\n        client: {x: clientX, y: clientY},\n        screen: {x: screenX, y: screenY},\n        page: {x: pageX, y: pageY}\n      },\n      scroll,\n      eventType: event.type,\n      selectedElement: {\n        ...prevState.selectedElement,\n        position: selectedElPosition,\n        boundingRect: selectedElBoundingRect\n      }\n    }))\n  }\n\n  const onLeave = (): void => {\n    setCursor(initArie)\n  }\n\n  const onSelectedElementEnter = (): void => {\n    const selectedElement = {...cursor.selectedElement}\n    selectedElement.isHover = true\n    setCursor((prevState) => ({\n      ...prevState,\n      selectedElement\n    }))\n  }\n\n  const onSelectedElementLeave = (): void => {\n    const selectedElement = {...cursor.selectedElement}\n    selectedElement.isHover = false\n    setCursor((prevState) => ({\n      ...prevState,\n      selectedElement\n    }))\n  }\n\n  React.useEffect(() => {\n    if (selectedElementId) {\n      selectedEl = document.getElementById(selectedElementId)\n      if (!selectedEl) {\n        throw new Error(`Element with id=\"${selectedElementId}\" doesn't exists`)\n      }\n      selectedEl.addEventListener('mouseenter', onSelectedElementEnter)\n      selectedEl.addEventListener('mouseleave', onSelectedElementLeave)\n    }\n    document.addEventListener('mousemove', onCursorTouchEvent)\n    document.addEventListener('mousedown', onCursorTouchEvent)\n    document.addEventListener('mouseup', onCursorTouchEvent)\n    document.addEventListener('wheel', onCursorTouchEvent)\n    document.addEventListener('mouseleave', onLeave)\n    if (touchEnabled) {\n      window.addEventListener('touchmove', onCursorTouchEvent)\n      window.addEventListener('touchstart', onCursorTouchEvent)\n      window.addEventListener('touchend', onLeave)\n    }\n\n    return (): void => {\n      document.removeEventListener('mousemove', onCursorTouchEvent)\n      document.removeEventListener('mousedown', onCursorTouchEvent)\n      document.removeEventListener('mouseup', onCursorTouchEvent)\n      document.removeEventListener('wheel', onCursorTouchEvent)\n      document.removeEventListener('mouseleave', onLeave)\n      if (touchEnabled) {\n        window.removeEventListener('touchmove', onCursorTouchEvent)\n        window.removeEventListener('touchstart', onCursorTouchEvent)\n        window.removeEventListener('touchend', onLeave)\n      }\n    }\n  }, [])\n\n  return cursor\n}\n\n/**\n * ----------------------------------------------------------------------------------*\n * ------------------------------ EXPORT ----------------------------------------------*\n * ------------------------------------------------------------------------*\n **/\n\nconst useArie = useArieCursor\n\nexport {useArie}\n","import styled from 'styled-components'\n\nconst StyledString = styled.p`\n  font-family: monospace;\n  font-size: 1rem;\n  font-weight: 600;\n`\n\nconst DataString = StyledString\n\nexport {DataString}\n","import * as React from 'react'\nimport {DataString} from './styles'\n/**\n *\n * @description\n * Render a string of text displaying\n * pointer coordinates and scroll data.\n *\n * @author: Chandler Chappell <@chvndler>\n * @license This package is provided \"as is,\" without warranty of any kind, expressed or implied.\n * In no event shall the author be held liable for any damages arising in any way from the use of this package.\n *\n * https://github.com/chvndler\n * Copyright © 2022. CDC® All rights reserved.\n *\n **/\n\n/* -------------------------------------------------------------------------------------------------\n * PointerValue\n * -----------------------------------------------------------------------------------------------*/\n\ntype CursorProps = {\n  /**\n   * The window object.\n   */\n  window?: Window\n  document?: Document\n  className?: string\n}\n\ntype component = JSX.Element\n\nconst PointerValue = () => {\n  const [value, setValue] = React.useState('arie.js')\n\n  React.useEffect(() => {\n    const format = (num: number | string, pad = 4) => {\n      return num.toString().padStart(pad, '0')\n    }\n    const setFromEvent = (event: {clientX: number | string; clientY: number | string}) => {\n      const x = format(event.clientX, 5)\n      const y = format(event.clientY, 5)\n      setValue(`X: ${x}, Y: ${y}`)\n    }\n\n    window.addEventListener('mousemove', setFromEvent)\n\n    return () => {\n      window.removeEventListener('mousemove', setFromEvent)\n    }\n  }, [])\n\n  /**\n   *\n   * @returns {value}. - A decimal value for each X and Y axis.\n   * This component renders a string of numbers displaying\n   * pointer coordinates and event data.\n   *\n   */\n\n  return (\n    <DataString>\n      <span>{value}</span>\n    </DataString>\n  )\n}\n\n/**\n *\n * @returns {component}.\n * <span> - A decimal value for each X and Y axis.\n *\n * Pass this component to a parent for styling.\n *\n */\n\nconst PointerData = ({...props}: CursorProps): component => {\n  return (\n    <div {...props} className={'--arie-pointer-value'}>\n      <PointerValue />\n    </div>\n  )\n}\n\n////////////////////////////////////////\nconst useArieCursor = PointerData\n//////////////////////////////////////\n\nexport {\n  //\n  useArieCursor\n}\n","import * as React from 'react'\nimport {DataString} from './styles'\n/**\n *\n * @description\n * Render a string of text displaying\n * pointer coordinates and scroll data.\n *\n * @author: Chandler Chappell <@chvndler>\n * @license This package is provided \"as is,\" without warranty of any kind, expressed or implied.\n * In no event shall the author be held liable for any damages arising in any way from the use of this package.\n *\n * https://github.com/chvndler\n * Copyright © 2022. CDC® All rights reserved.\n *\n **/\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollValue\n * -----------------------------------------------------------------------------------------------*/\n\ninterface scrollProps {\n  /**\n   * The window object.\n   */\n  window: Window\n  /**\n   * The document object.\n   */\n  document: Document\n  /**\n   * className for custom styling..\n   */\n  className?: string\n}\n\ntype component = JSX.Element\n\nconst scrollFraction = ({window, document}: scrollProps) => {\n  /**\n   * i dont know what this does.\n   */\n  return Math.min(window.scrollY / (document.body.offsetHeight - 770), 0.999)\n}\n\nconst ScrollValue = () => {\n  /**\n   * useState (can be used to set the initial value of the state)\n   * default is 'traxx©'\n   */\n  const [value, setValue] = React.useState('traxx©')\n\n  React.useEffect(() => {\n    /**\n     *\n     * @param num\n     * @param pad\n     * @returns a string of numbers and leading zeros.\n     */\n    const format = (num: number | string, pad = 4) => {\n      return num.toString().padStart(pad, '0')\n    }\n\n    const setFromScroll = () => {\n      const y = scrollFraction({window, document})\n      /**\n       * @returns `SCROLL: 0.000`\n       */\n      setValue(`SCROLL: 0.${format(y.toFixed(3), 2)}`)\n    }\n\n    window.addEventListener('scroll', setFromScroll)\n\n    return () => {\n      window.removeEventListener('scroll', setFromScroll)\n    }\n  }, [])\n\n  /**\n   *\n   * @returns {value}.\n   * This component renders a string of numbers displaying\n   * scroll position on the page.\n   *\n   */\n\n  return (\n    <DataString>\n      <span>{value}</span>\n    </DataString>\n  )\n}\n\n/**\n *\n * @returns {component}.\n * <span> - A decimal value for each X and Y axis.\n *\n * Pass this component to a parent for styling.\n *\n */\n\nconst ScrollData = ({...props}: scrollProps): component => {\n  return (\n    <div {...props} className={'--arie-scroll-value'}>\n      <ScrollValue />\n    </div>\n  )\n}\n\n////////////////////////////////////////\nconst useArieScroll = ScrollData\n//////////////////////////////////////\n\nexport {\n  //\n  useArieScroll\n}\n","import {useEffect, useLayoutEffect} from 'react'\n\nexport const useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n"],"names":["initArie","position","client","x","y","screen","page","scroll","wheelDown","wheelUp","eventType","selectedElement","angle","boundingRect","left","top","width","height","isHover","DataString","styled","p","PointerValue","React","value","setValue","format","num","pad","toString","padStart","setFromEvent","event","clientX","clientY","window","addEventListener","removeEventListener","ScrollValue","setFromScroll","document","Math","min","scrollY","body","offsetHeight","toFixed","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","touchEnabled","selectedElementId","selectedElementOffset","cursor","setCursor","selectedEl","onCursorTouchEvent","screenX","screenY","pageX","pageY","type","deltaY","touchEvent","touches","Error","selectedElPosition","selectedElBoundingRect","getBoundingClientRect","rad2Deg","PI","atan2","prevState","onLeave","onSelectedElementEnter","onSelectedElementLeave","getElementById","props","className"],"mappings":"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"}